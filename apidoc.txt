Prefix: http://localhost:7000/api
Bat server:
- Chay command
- Switch disk (F:)
- cd folder ggclass_react_vite/server
- main server

API create class:
- url: /v1/classes
- method: post
- request:
    - name: string
    - description: string
- response:
    - message: string
    - data:
        - id: int
        - name: string
        - description: string
        - room: string
        - topic: string
        - code: string
        - createdBy: int
        - createdAt: timestamp
        - updatedAt: timestamp

API register:
- url: /v1/auth/register
- method: post
- request:
    - email : string
    - username: string
    - password: string
- response:
    - message: string
    - data:
        - id: int
        - username:string
        - email : string
        - createdAt: timestamp
        - updatedAt: timestamp

API login:
- url: /v1/auth/login
- method: post
- request:
    - email : string
    - password : string
- response:
    - message: string
    - data:
        - accessToken string
        - user:
            - id int
            - username string
            - email string
            - createdAt timestamp
            - updatedAt timestamp


API Create post:
- url: /v1/posts
- method: post
- request:
    - content: string
    - classId: int
- response:
    - message : string
    - data:
        - id : int
        - content: string
        - classId: int
        - createdBy: int
        - createdAt: timestamp
        - updatedAt: timestamp

API Create comment:
- url: /v1/comments
- method: post
- request:
    - content: string
    - postId: int
- response:
    - message: string
    - data:
        - id int
        - content string
        - postId string
        - createdBy int
        - createdAt timestamp
        - updatedAt timestamp

API get posts in class:
- url: /v1/classes/:id/posts
- method: get
- request:
- response:
    - message: string
    - data: [
        {
            id: int,
            content: string,
            createdBy: int,
            createdByUser: {
                id : int,
                username: string,
            },
            comments: [
                {
                    id: int,
                    content: string,
                    createdByUser: {
                        id : int,
                        username: string
                    },
                    createdAt: timestamp
                }
            ]
        }
    ]

API get members in class:
url: /v1/classes/members/:id
method: get
response:
    - message: string
    - data: [
        {
            id: int,
            username:string,
            profile: {
                avatar: string
            }
        }
    ]

API delete members:
url: /v1/classes/members
method: delete
request:
    - userId: int
    - classId: int
response:
    - message: string

API invite members:
url: /v1/classes/members
request:
    - classId: int
    - email : string
    - role: 2
response:
    - message

API member join class
url: /v1/members
method: post
request:
    - code: string
response:
    - message: string

API accept invite
url: /v1/members
method: put
request:
    - userId: int
    - classId: int
response:
    - message: string

API get members pending:
url: /v1/members/class/:id/pending
method: get
response:
    - message: string
    - data: [
        {
            - id : int
            - username: string
            - email: string
            - profile: {
                - avatar: string
            }
        }
    ]